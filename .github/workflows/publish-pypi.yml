name: Publish Python package to PyPI on Release

on:
  release:
    types: [published]
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment:
      name: pypi

    steps:
      - name: Checkout release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build tools
        run: python3 -m pip install --upgrade pip build

      - name: Verify tag matches version in pyproject.toml
        if: github.event_name == 'release'
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ github.event.release.tag_name }}"
          TAG_STRIPPED="${TAG#v}"
          PYPROJECT_VERSION=$(sed -n -E 's/^version\s*=\s*"([^"]+)"/\1/p' pyproject.toml | head -n1)
          echo "pyproject version: $PYPROJECT_VERSION"
          echo "release tag: $TAG"
          if [ -z "$PYPROJECT_VERSION" ]; then echo "Version not found in pyproject.toml"; exit 1; fi
          if [ "$PYPROJECT_VERSION" != "$TAG_STRIPPED" ]; then
            echo "Version mismatch: tag v$TAG_STRIPPED != pyproject $PYPROJECT_VERSION"
            exit 1
          fi

      - name: Clean build artifacts
        run: rm -rf dist build

      - name: Build sdist and wheel
        run: python3 -m build

      - name: Publish to PyPI (OIDC Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
